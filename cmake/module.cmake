macro(define_var v_name value_default)
    if(NOT DEFINED ${v_name})
        log_i("not defined ${v_name}, set by default[${value_default}]")
        set(${v_name} ${value_default} CACHE STRING "xx")
    endif()
    log_i("defined ${v_name}=${${v_name}}")
endmacro()

macro(list_unique __lst)
  if(${__lst})
    list(REMOVE_DUPLICATES ${__lst})
  endif()
endmacro()

#SP_INC
#SP_LIB
#SP_SRC
#generate_module(ffmpeg SP_INC xx xx SP_LIB xx xx SP_SRC xxx xxx)
macro(generate_module module_name)
    set(temp_list ${ARGN})
    set(tag_ "")
    foreach(item_ ${temp_list})
        if(${item_} STREQUAL SP_INC)
            set(tag_ module_${module_name}_inc)
        elseif(${item_} STREQUAL SP_LIB)
            set(tag_ module_${module_name}_lib)
        elseif(${item_} STREQUAL SP_SRC)
            set(tag_ module_${module_name}_src)
        else()
            if(NOT ${item_} STREQUAL "NON")
                list(APPEND ${tag_} "${item_}")
            endif()
        endif()        
    endforeach()
    unset(tag_)
    list_unique(module_${module_name}_inc)
    list_unique(module_${module_name}_lib)
    list_unique(module_${module_name}_src)
    set(module_${module_name}_inc ${module_${module_name}_inc} CACHE STRING "xxx")
    set(module_${module_name}_lib ${module_${module_name}_lib} CACHE STRING "xxx")
    set(module_${module_name}_src ${module_${module_name}_src} CACHE STRING "xxx")
endmacro()

function(print_module module_name)
    if(NOT DEFINED module_${module_name}_enable OR NOT module_${module_name}_enable STREQUAL "ON")
        log_t("module_${module_name}_enable=${C_BoldRed}disable")
    else()
        log_t("module_${module_name}_enable=${C_Green}enable")
    endif()

    if(DEFINED module_${module_name}_inc AND NOT module_${module_name}_inc STREQUAL "")
        log_t("module_${module_name}_inc=${module_${module_name}_inc}")
    else()
        log_t("module_${module_name}_inc=${C_Red}null")
    endif()

    if(DEFINED module_${module_name}_lib AND NOT module_${module_name}_lib STREQUAL "")
        log_t("module_${module_name}_lib=${module_${module_name}_lib}")
    else()
        log_t("module_${module_name}_lib=${C_Red}null")
    endif()

    if(DEFINED module_${module_name}_src AND NOT module_${module_name}_src STREQUAL "")
        log_t("module_${module_name}_src=${module_${module_name}_src}")
    else()
        log_t("module_${module_name}_src=${C_Red}null")
    endif()

    message("")
endfunction()


macro(add_module t_name module_name)
    set(switch "")
    if(${ARGC} EQUAL 3)
        set(_switch)
        string(TOLOWER ${ARGN} _switch)
        # log_t("_switch:${_switch}")
        if(${_switch} STREQUAL "off")
            set(switch "OFF")
        else()
            set(switch "ON")
        endif()
        # log_t("switch:${switch}")
        unset(_switch)
    else()
        set(switch "ON")
    endif()
    # log_t("switch:${switch}")
    if(NOT DEFINED module_${module_name}_enable)
        set(module_${module_name}_enable ${switch} CACHE STRING "xx")
    endif()
    unset(switch)
    # log_t("module_${module_name}_enable:${module_${module_name}_enable}")
    if(${module_${module_name}_enable})
        target_link_libraries(${t_name} PRIVATE ${module_${module_name}_lib})
        target_include_directories(${t_name} PRIVATE ${module_${module_name}_inc})
        target_sources(${t_name} PRIVATE ${module_${module_name}_src})
    endif()
    print_module(${module_name})
endmacro()

macro(add_module_list t_name module_name)
    
endmacro()

# cmd: -Dmacro_macro_name
#NON
macro(c_macro target_name macro_name macro_value macro_switch)

    set(_macro_name "")
    set(_macro_value "")
    set(_switch "")
    if(NOT ${ARGC} EQUAL 4)
        message(FATAL_ERROR "c_macro input argment error! need 4 argment\n")
    endif()
    if(NOT DEFINED macro_${macro_name} AND NOT ${macro_name} STREQUAL "" AND NOT ${macro_name} STREQUAL "NON")
        set(_macro_name ${macro_name})
        set(_macro_value ${macro_value})
        set(_switch ${macro_switch})
    else()
        set(_macro_name ${macro_name})
        set(_macro_value ${macro_${macro_name}})
        set(_switch "ON")
    endif()

    if(${_switch} STREQUAL "ON")
        if(NOT ${_macro_value} STREQUAL "" AND NOT ${_macro_value} STREQUAL "NON")
            target_compile_definitions(${target_name}  PRIVATE ${_macro_name}=${_macro_value})
            log_t("${C_Green}ON macro:${C_Green}${_macro_name} value:${C_Green}${_macro_value} add to target:${target_name}")
        else()
            target_compile_definitions(${target_name} PRIVATE ${_macro_name})
            log_t("${C_Green}ON macro:${C_Green}${_macro_name} value:${C_Red}no add to target:${target_name}")
        endif()
    else()
        log_t("${C_Red}OFF ${C_Green}macro:${C_Green}${_macro_name} value:${C_Green}${_macro_value} add to target:${target_name}")
    endif()

    unset(_macro_name)
    unset(_macro_value)
    unset(_switch)
    message("")
endmacro()


